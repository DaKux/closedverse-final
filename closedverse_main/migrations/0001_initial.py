# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-09-02 02:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=32, unique=True)),
                ('nickname', models.CharField(max_length=32, null=True)),
                ('password', models.CharField(max_length=128)),
                ('email', models.CharField(blank=True, max_length=255)),
                ('avatar', models.CharField(blank=True, max_length=1200)),
                ('level', models.SmallIntegerField(choices=[(0, 'normal'), (1, 'moderator'), (2, 'admin'), (5, 'pf2m'), (10, 'master')], default=0)),
                ('addr', models.GenericIPAddressField(null=True)),
                ('origin_id', models.CharField(blank=True, max_length=16, null=True)),
                ('origin_info', models.CharField(blank=True, max_length=255, null=True)),
                ('staff', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feeling', models.SmallIntegerField(choices=[(0, 'normal'), (1, 'happy'), (2, 'wink'), (3, 'surprised'), (4, 'frustrated'), (5, 'confused')], default=0)),
                ('body', models.TextField(null=True)),
                ('screenshot', models.URLField(blank=True, default='', max_length=1200, null=True)),
                ('drawing', models.CharField(blank=True, max_length=200, null=True)),
                ('spoils', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('befores', models.TextField(blank=True, null=True)),
                ('has_edit', models.BooleanField(default=False)),
                ('status', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('ico', models.URLField(blank=True)),
                ('banner', models.URLField(blank=True)),
                ('type', models.SmallIntegerField(choices=[(0, 'general'), (1, 'game'), (2, 'special')], default=0)),
                ('platform', models.SmallIntegerField(choices=[(0, 'none'), (1, '3ds'), (2, 'wii u'), (3, 'both')], default=0)),
                ('tags', models.CharField(blank=True, choices=[('announcements', 'main announcement community'), ('changelog', 'main changelog')], max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'communities',
            },
        ),
        migrations.CreateModel(
            name='CommunityClink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('kind', models.BooleanField(default=False)),
                ('also', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='two', to='closedverse_main.Community')),
                ('root', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one', to='closedverse_main.Community')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField(choices=[(0, 'Bug report'), (1, 'Suggestion'), (2, 'Want')])),
                ('body', models.TextField(blank=True, default='')),
                ('sex', models.SmallIntegerField(choices=[(0, 'girl'), (1, 'privileged one'), (2, '(none)')], null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conv_source', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conv_target', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_source', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_target', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.TextField(blank=True, default='', null=True)),
                ('read', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fr_source', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fr_target', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('latest', models.DateTimeField(auto_now=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_source', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_target', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feeling', models.SmallIntegerField(choices=[(0, 'normal'), (1, 'happy'), (2, 'wink'), (3, 'surprised'), (4, 'frustrated'), (5, 'confused')], default=0)),
                ('body', models.TextField(null=True)),
                ('drawing', models.CharField(blank=True, max_length=200, null=True)),
                ('screenshot', models.URLField(blank=True, default='', max_length=1200, null=True)),
                ('url', models.URLField(blank=True, default='', max_length=1200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Conversation')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('read', models.BooleanField(default=False)),
                ('type', models.SmallIntegerField(choices=[(0, 'Yeah on post'), (1, 'Yeah on comment'), (2, 'Comment on my post'), (3, "Comment on others' post"), (4, 'Follow to me')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('latest', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feeling', models.SmallIntegerField(choices=[(0, 'normal'), (1, 'happy'), (2, 'wink'), (3, 'surprised'), (4, 'frustrated'), (5, 'confused')], default=0)),
                ('body', models.TextField(null=True)),
                ('drawing', models.CharField(blank=True, max_length=200, null=True)),
                ('screenshot', models.URLField(blank=True, default='', max_length=1200, null=True)),
                ('url', models.URLField(blank=True, default='', max_length=1200)),
                ('spoils', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('befores', models.TextField(blank=True, null=True)),
                ('has_edit', models.BooleanField(default=False)),
                ('status', models.SmallIntegerField(choices=[(0, 'ok'), (1, 'delete by user'), (2, 'delete by authority'), (3, 'delete by mod'), (4, 'delete by admin')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, default='')),
                ('country', models.CharField(blank=True, default='', max_length=120)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('id_visibility', models.SmallIntegerField(choices=[(0, 'show'), (1, 'friends only'), (2, 'hide')], default=0)),
                ('relationship_visibility', models.SmallIntegerField(choices=[(0, 'show'), (1, 'friends only'), (2, 'hide')], default=0)),
                ('weblink', models.CharField(blank=True, default='', max_length=1200)),
                ('gameskill', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Yeah',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('type', models.SmallIntegerField(choices=[(0, 'post'), (1, 'comment')], default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentArchive',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='closedverse_main.Comment')),
                ('archived', models.DateTimeField(auto_now_add=True)),
            ],
            bases=('closedverse_main.comment',),
        ),
        migrations.CreateModel(
            name='PostArchive',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='closedverse_main.Post')),
                ('archived', models.DateTimeField(auto_now_add=True)),
            ],
            bases=('closedverse_main.post',),
        ),
        migrations.AddField(
            model_name='yeah',
            name='comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Comment'),
        ),
        migrations.AddField(
            model_name='yeah',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Post'),
        ),
        migrations.AddField(
            model_name='profile',
            name='favorite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Post'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='community',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Community'),
        ),
        migrations.AddField(
            model_name='post',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='context_comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Comment'),
        ),
        migrations.AddField(
            model_name='notification',
            name='context_post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Post'),
        ),
        migrations.AddField(
            model_name='notification',
            name='merged_with',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='merged', to='closedverse_main.Notification'),
        ),
        migrations.AddField(
            model_name='notification',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_to', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='community',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Community'),
        ),
        migrations.AddField(
            model_name='comment',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='original_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='closedverse_main.Post'),
        ),
    ]
